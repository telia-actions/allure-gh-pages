name: 'Allure report to GH Pages'
description: 'Publish Allure report with history to GitHub Pages'
inputs:
  allure-results:
    description: 'Path to directory having Allure results'
    required: true
    default: 'allure-results'
  gh-pages-branch:
    description: 'Branch to be used for GitHub Pages'
    required: true
    default: 'gh-pages'
  gh-token:
    description: 'GitHub Token to be used for deploying pages. Use for example secrets.GITHUB_TOKEN as the value.'
    required: true
  keep-reports:
    description: 'Keep x last reports'
    required: false
    default: '14'
  subfolder:
    description: 'This can be used for example to store reports from test runs in different test environments, or from different test sets, into separate subfolders.'
    required: false
    default: ''
  test-env-name:
    description: 'Name of the test environment. Will be stored to the report.'
    required: false
    default: ''
outputs:
  report-url:
    description: "URL for Allure report"
    value: ${{ steps.report-link.outputs.report-url }}

runs:
  using: composite
  steps:
    - name: Get Allure history
      uses: actions/checkout@v2
      continue-on-error: true
      with:
        ref: ${{ inputs.gh-pages-branch }}
        path: gh-pages

    - name: Allure Report Generation
      uses: telia-actions/simple-elf-allure-report@v1
      with:
        allure_results: ${{ inputs.allure-results }}
        #gh_pages: gh-pages
        #allure_report: allure-report
        allure_history: allure-history
        keep_reports: ${{ inputs.keep-reports }}
        subfolder: ${{ inputs.subfolder }}
        test_env_name: ${{ inputs.test-env-name }}

    - name: Deploy report to Github Pages
      uses: telia-actions/peaceiris-gh-pages@v3
      with:
        github_token: ${{ inputs.gh-token }}
        publish_branch: ${{ inputs.gh-pages-branch }}
        publish_dir: ./allure-history

    - id: report-link
      run: |
        if [[ ${{ inputs.subfolder }} != '' ]]; then export URL_SUBFOLDER=${{ inputs.subfolder }}/; fi
        echo "::set-output name=report-url::$(gh api repos/$GITHUB_REPOSITORY/pages | jq .html_url | sed -e 's/^"//' -e 's/"$//')$URL_SUBFOLDER${{ github.run_number }}"
      env:
        GH_TOKEN: ${{ inputs.gh-token }}
      shell: bash
